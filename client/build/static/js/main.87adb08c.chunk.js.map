{"version":3,"sources":["context/auth/authContext.js","components/layouts/Navbar.js","context/history/historyContext.js","components/pages/Home.js","components/pages/Signin.js","components/pages/Register.js","components/cards/CardItem.js","components/cards/Cards.js","components/pages/Game.js","components/routing/privateRoute.js","context/types.js","context/history/historyReducer.js","context/history/HistoryState.js","context/auth/authReducer.js","utils/setAuthToken.js","context/auth/AuthState.js","App.js","index.js"],"names":["authContext","createContext","Navbar","useContext","AuthContext","isAuthenticated","logout","user","authLinks","name","onClick","to","guestLinks","className","href","id","historyContext","Home","HistoryContext","games","updateCurrentLevel","updateCurrentTheme","getGames","useState","chosenTheme","setChosenTheme","useEffect","loadUser","window","M","AutoInit","getAvg","data","gameArr","filter","game","gameLevel","map","numOfMoves","length","Math","floor","reduce","a","b","e","target","handleClick","loading","data-target","tabIndex","Signin","props","login","error","clearErrors","email","password","setUser","history","push","alert","onChange","value","autoComplete","onSubmit","preventDefault","type","required","htmlFor","Register","register","CardItem","imageId","shownCards","cardClicked","source","show","setShow","buff","includes","imgid","style","backgroundColor","pointerEvents","alt","src","visibility","Cards","updateActive","updateNumOfMoves","currentLevel","currentTheme","updateNewGame","images","setImages","setShownCards","currCards","setCurrCards","disableClick","setDisableClick","count","setCount","number","buffer","i","temp","sort","random","curId","curImgId","cardDiv","parseInt","getAttribute","setTimeout","date","Date","now","shownCardsTempArr","splice","noClicking","console","log","maxWidth","image","index","Game","addNewGame","active","setActive","curNumOfMoves","setCurNumOfMoves","newGame","setNewGame","PrivateRoute","Component","component","rest","render","UPDATE_CURRENT_LEVEL","UPDATE_CURRENT_THEME","ADD_NEW_GAME","GAME_ERROR","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","GET_GAMES","historyReducer","state","action","payload","HistoryState","useReducer","dispatch","axios","get","res","response","msg","config","header","post","Provider","level","theme","children","authReducer","localStorage","setItem","token","removeItem","setAuthToken","defaults","headers","common","AuthState","initialState","getItem","formData","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87adb08c.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst Navbar = () => {\r\n  // declare and destructure authcontext\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { isAuthenticated, logout, user } = authContext;\r\n\r\n  // logout user\r\n  const onLogOut = () => {\r\n    logout();\r\n  };\r\n\r\n  // fragment displays of user signed in\r\n  const authLinks = (\r\n    <Fragment>\r\n      <li>Hello, {user && user.name}!</li>\r\n      <li onClick={onLogOut}>\r\n        <Link to='/signin'>Sign Out</Link>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n\r\n  // fragment displays if user is not signed in\r\n  const guestLinks = (\r\n    <Fragment>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/signin'>Sign In</Link>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    // materializeCSS navbar\r\n    <nav>\r\n      <div className='nav-wrapper'>\r\n        <a href='/' className='brand-logo'>\r\n          <i className='material-icons'>memory</i>\r\n          Memory\r\n        </a>\r\n        {/* check if user signed in or not */}\r\n        <ul id='nav-mobile' className='right'>\r\n          {isAuthenticated ? authLinks : guestLinks}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createContext } from 'react';\r\n\r\nconst historyContext = createContext();\r\n\r\nexport default historyContext;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HistoryContext from '../../context/history/historyContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst Home = () => {\r\n  // declare authContext, declare and destructure historyContext\r\n  const historyContext = useContext(HistoryContext);\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const {\r\n    games,\r\n    updateCurrentLevel,\r\n    updateCurrentTheme,\r\n    getGames,\r\n  } = historyContext;\r\n\r\n  // declare component level state\r\n  const [chosenTheme, setChosenTheme] = useState('');\r\n\r\n  // load user and get data from backend\r\n  useEffect(() => {\r\n    authContext.loadUser();\r\n    getGames();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // enable materialize dropdown functionality\r\n  useEffect(() => {\r\n    window.M.AutoInit();\r\n  });\r\n\r\n  // calculate average moves\r\n  const getAvg = (data) => {\r\n    // filter games data based on difficulty level\r\n    const gameArr = data[0]\r\n      .filter((game) => game.gameLevel === data[1])\r\n      .map((game) => game.numOfMoves);\r\n\r\n    // return avg moves or message\r\n    if (gameArr.length > 0) {\r\n      return Math.floor(gameArr.reduce((a, b) => a + b) / gameArr.length);\r\n    } else {\r\n      return 'No games yet played';\r\n    }\r\n  };\r\n\r\n  // store current level\r\n  const onClick = (e) => {\r\n    updateCurrentLevel(e.target.name);\r\n  };\r\n\r\n  // store current theme\r\n  const handleClick = (e) => {\r\n    updateCurrentTheme(e.target.name);\r\n    setChosenTheme(e.target.name);\r\n  };\r\n\r\n  return (\r\n    // materializeCSS card\r\n    // prevent view if page still loading\r\n    !authContext.loading && (\r\n      <div className='row container'>\r\n        <div className='col s12'>\r\n          <div className='card blue-grey darken-1 large'>\r\n            <div className='card-content white-text'>\r\n              <span className='center card-title'>\r\n                You have played {games.length}{' '}\r\n                {games.length === 1 ? 'game' : 'games'} so far!\r\n              </span>\r\n              <br></br>\r\n              <br></br>\r\n              <span className='center card-title'>\r\n                Your Average Number of Moves:\r\n              </span>\r\n              <br></br>\r\n              <div className='row col s12'>\r\n                <div className='col s4 center'>\r\n                  <u>Beginner</u>\r\n                </div>\r\n                <div className='col s4 center'>\r\n                  <u>Intermediate</u>\r\n                </div>\r\n                <div className='col s4 center'>\r\n                  <u>Expert</u>\r\n                </div>\r\n              </div>\r\n              <div className='row col s12'>\r\n                <div className='col s4 center'>\r\n                  <p>{getAvg([games, 'beginner'])}</p>\r\n                </div>\r\n                <div className='col s4 center'>\r\n                  <p>{getAvg([games, 'intermediate'])}</p>\r\n                </div>\r\n                <div className='col s4 center'>\r\n                  <p>{getAvg([games, 'expert'])}</p>\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <span className='center card-title'>Start A New Game Below!</span>\r\n            </div>\r\n            <div className='center-align'>\r\n              <a\r\n                className='dropdown-trigger btn blue-grey darken-1'\r\n                href='#'\r\n                data-target='dropdown1'\r\n              >\r\n                {chosenTheme.length > 0 ? chosenTheme : 'Choose A Theme!'}\r\n              </a>\r\n              <ul id='dropdown1' className='dropdown-content'>\r\n                <li>\r\n                  <a\r\n                    href='#'\r\n                    onClick={handleClick}\r\n                    name='robots'\r\n                    className='blue-grey-text text-darken-1'\r\n                  >\r\n                    Robots\r\n                  </a>\r\n                </li>\r\n                <li className='divider' tabIndex='-1'></li>\r\n                <li>\r\n                  <a\r\n                    href='#'\r\n                    onClick={handleClick}\r\n                    name='cats'\r\n                    className='blue-grey-text text-darken-1'\r\n                  >\r\n                    Cats\r\n                  </a>\r\n                </li>\r\n                <li className='divider' tabIndex='-1'></li>\r\n                <li>\r\n                  <a\r\n                    href='#'\r\n                    onClick={handleClick}\r\n                    name='monsters'\r\n                    className='blue-grey-text text-darken-1'\r\n                  >\r\n                    Monsters\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className='col s12 card-action'>\r\n              <div className='col s4 center'>\r\n                <Link\r\n                  to='/game'\r\n                  className='waves-effect waves-red btn-flat'\r\n                  name='beginner'\r\n                  onClick={onClick}\r\n                >\r\n                  Beginner\r\n                </Link>\r\n              </div>\r\n              <div className='col s4 center'>\r\n                <Link\r\n                  to='/game'\r\n                  className='waves-effect waves-red btn-flat'\r\n                  name='intermediate'\r\n                  onClick={onClick}\r\n                >\r\n                  Intermediate\r\n                </Link>\r\n              </div>\r\n              <div className='col s4 center'>\r\n                <Link\r\n                  to='/game'\r\n                  className='waves-effect waves-red btn-flat'\r\n                  name='expert'\r\n                  onClick={onClick}\r\n                >\r\n                  Expert\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\n// bring in props, declare authContext and destructure\r\nconst Signin = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { login, error, clearErrors, isAuthenticated } = authContext;\r\n\r\n  // declare state and desstructure\r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = user;\r\n\r\n  useEffect(() => {\r\n    // if user is signed in, go to homepage\r\n    if (isAuthenticated) {\r\n      props.history.push('/');\r\n    }\r\n\r\n    // send err msg if user not recognized\r\n    if (error === 'invalid credentials') {\r\n      alert(error);\r\n      clearErrors();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [error, isAuthenticated, props.history]);\r\n\r\n  // store user input on change\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  // call login with user info on form submit\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    login({\r\n      email,\r\n      password,\r\n    });\r\n  };\r\n\r\n  return (\r\n    // materializeCSS form\r\n    <div className='container form-container'>\r\n      <div className='row'>\r\n        <form className='col s6' autoComplete='off' onSubmit={onSubmit}>\r\n          <div className='row'>\r\n            <div className='input-field col s9 offset-s8'>\r\n              <input\r\n                id='email'\r\n                type='text'\r\n                className='validate'\r\n                onChange={onChange}\r\n                required\r\n              ></input>\r\n              <label htmlFor='email'>Email</label>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='input-field col s9 offset-s8'>\r\n              <input\r\n                id='password'\r\n                type='password'\r\n                className='validate'\r\n                onChange={onChange}\r\n                required\r\n              ></input>\r\n              <label htmlFor='password'>Password</label>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <button\r\n              className='btn waves-effect waves-light red lighten-2 col s5 offset-s10'\r\n              type='submit'\r\n              name='action'\r\n            >\r\n              Sign In\r\n              <i className='material-icons right'>send</i>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\n// bring in props\r\nconst Register = (props) => {\r\n  // declare and destructure authContext\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { register, error, clearErrors, isAuthenticated } = authContext;\r\n\r\n  // declare and destructure component level state\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { name, email, password } = user;\r\n\r\n  // if user is signed in, go to homepage\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      props.history.push('/');\r\n    }\r\n\r\n    // if errors, alert user and clear errors\r\n    if (error === 'Email already exists') {\r\n      alert(error);\r\n      clearErrors();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [error, isAuthenticated, props.history]);\r\n\r\n  // store user input on change\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  // register user with input object on form submit\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    register({\r\n      name,\r\n      email,\r\n      password,\r\n    });\r\n  };\r\n\r\n  return (\r\n    // materialize CSS form\r\n    <div className='container form-container'>\r\n      <div className='row'>\r\n        <form className='col s6' onSubmit={onSubmit}>\r\n          <div className='row'>\r\n            <div className='input-field col s9 offset-s8'>\r\n              <input\r\n                id='name'\r\n                type='text'\r\n                className='validate'\r\n                onChange={onChange}\r\n                required\r\n              />\r\n              <label htmlFor='user-name'>Username</label>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='input-field col s9 offset-s8'>\r\n              <input\r\n                id='email'\r\n                type='email'\r\n                className='validate'\r\n                onChange={onChange}\r\n                required\r\n              />\r\n              <label htmlFor='email'>Email</label>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='input-field col s9 offset-s8'>\r\n              <input\r\n                id='password'\r\n                type='password'\r\n                className='validate'\r\n                onChange={onChange}\r\n                required\r\n              />\r\n              <label htmlFor='password'>Password</label>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <button\r\n              className='btn waves-effect waves-light red lighten-2 col s5 offset-s10'\r\n              type='submit'\r\n              name='action'\r\n            >\r\n              Register\r\n              <i className='material-icons right'>send</i>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// bring in props\r\nconst CardItem = ({ id, imageId, shownCards, cardClicked, source }) => {\r\n  // set state\r\n  const [show, setShow] = useState(false);\r\n\r\n  // check if cardItem should be displayed, display if so\r\n  useEffect(() => {\r\n    let buff = shownCards.includes(id);\r\n    setShow(buff);\r\n    // eslint-disable-next-line\r\n  }, [shownCards]);\r\n\r\n  // call cardClicked with card div\r\n  const onClick = (e) => {\r\n    cardClicked(e.target);\r\n  };\r\n\r\n  return (\r\n    // materializeCSS card\r\n    <div\r\n      id={id}\r\n      imgid={imageId}\r\n      className='mem-card'\r\n      // show card img and disable click if necessary\r\n      style={{\r\n        backgroundColor: show ? '#D3D3D3' : null,\r\n        pointerEvents: show ? 'none' : 'auto',\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <img\r\n        id={id}\r\n        imgid={imageId}\r\n        alt='card-figure'\r\n        // get image from robohash\r\n        src={`https://robohash.org/${imageId}` + source}\r\n        // hide image if necesarry\r\n        style={{ visibility: !show ? 'hidden' : 'visible' }}\r\n      ></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CardItem from './CardItem';\r\n\r\n// declare props and initial state\r\nconst Cards = ({\r\n  updateActive,\r\n  updateNumOfMoves,\r\n  currentLevel,\r\n  currentTheme,\r\n  updateNewGame,\r\n}) => {\r\n  const [images, setImages] = useState([]);\r\n  const [shownCards, setShownCards] = useState([]);\r\n  const [currCards, setCurrCards] = useState([]);\r\n  const [disableClick, setDisableClick] = useState(false);\r\n  const [count, setCount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // declare number of cards based on level\r\n    let number;\r\n    switch (currentLevel) {\r\n      case 'beginner':\r\n        number = 12;\r\n        break;\r\n      case 'intermediate':\r\n        number = 20;\r\n        break;\r\n      case 'expert':\r\n        number = 30;\r\n        break;\r\n      default:\r\n        number = 12;\r\n    }\r\n\r\n    // declare array with integers up to 'number', repeated once, and then randomize\r\n    let buffer = [];\r\n    for (let i = 1; i <= number; i++) {\r\n      let temp;\r\n      if (i <= number / 2) {\r\n        temp = i;\r\n      } else {\r\n        temp = i - number / 2;\r\n      }\r\n      buffer.push({ id: temp });\r\n    }\r\n\r\n    buffer.sort((a, b) => {\r\n      return 0.5 - Math.random();\r\n    });\r\n\r\n    // save random int array to state\r\n    setImages(buffer);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // declare variables\r\n  let curId = 0;\r\n  let curImgId = 0;\r\n\r\n  // declare source based on user's chosen theme for robohash api\r\n  let source;\r\n  switch (currentTheme) {\r\n    case 'robots':\r\n      source = '?set=set1';\r\n      break;\r\n    case 'cats':\r\n      source = '?set=set4';\r\n      break;\r\n    case 'monsters':\r\n      source = '?set=set2';\r\n      break;\r\n    default:\r\n      source = '?set=set1';\r\n  }\r\n\r\n  // handle cards clicked\r\n  const cardClicked = (cardDiv) => {\r\n    // delcare imgId and div id\r\n    curImgId = parseInt(cardDiv.getAttribute('imgid'));\r\n    curId = parseInt(cardDiv.id);\r\n    // if card is first clicked in pair, store values\r\n    if (currCards.length === 0) {\r\n      setCurrCards((currCards) => [...currCards, curImgId]);\r\n      setShownCards((shownCards) => [...shownCards, curId]);\r\n      // runs if card second clicked in pair\r\n    } else {\r\n      // increase count state by 1\r\n      setCount(count + 1);\r\n      // if cards match, store second card and clear currCards state\r\n      if (currCards.includes(curImgId)) {\r\n        setShownCards((shownCards) => [...shownCards, curId]);\r\n        setCurrCards([]);\r\n        // runs if all cards found\r\n        if (shownCards.length === images.length - 1) {\r\n          // store number of moves, pass game object to updateNewGame function\r\n          updateNumOfMoves(count);\r\n          setTimeout(() => {\r\n            updateNewGame({\r\n              gameLevel: currentLevel,\r\n              numOfMoves: count,\r\n              date: Date.now(),\r\n            });\r\n            updateActive();\r\n          }, 1000);\r\n        }\r\n        // runs if second card does not match firs card\r\n      } else {\r\n        // disable click, show second card, clear current cards\r\n        setDisableClick(true);\r\n        setShownCards((shownCards) => [...shownCards, curId]);\r\n        setCurrCards([]);\r\n        // after 2 seconds, flip last two cards back over and enable clicking\r\n        setTimeout(() => {\r\n          let shownCardsTempArr = [...shownCards];\r\n          shownCardsTempArr.splice(-1, 1);\r\n          setShownCards(shownCardsTempArr);\r\n          setDisableClick(false);\r\n        }, 2000);\r\n      }\r\n    }\r\n  };\r\n\r\n  // log message if shown card clicked\r\n  const noClicking = () => {\r\n    console.log('nope!');\r\n  };\r\n\r\n  return (\r\n    // materializeCSS card\r\n    <div\r\n      className='mem-cards-container'\r\n      // set width for number of cards\r\n      style={{\r\n        maxWidth:\r\n          currentLevel === 'beginner'\r\n            ? '500px'\r\n            : currentLevel === 'intermediate'\r\n            ? '600px'\r\n            : '700px',\r\n      }}\r\n    >\r\n      {images.map((image, index) => (\r\n        <CardItem\r\n          key={index}\r\n          id={index}\r\n          imageId={image.id}\r\n          shownCards={shownCards}\r\n          cardClicked={disableClick ? noClicking : cardClicked}\r\n          source={source}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HistoryContext from '../../context/history/historyContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\nimport Cards from '../cards/Cards';\r\n\r\nconst Game = () => {\r\n  // declare historyContext, authContext, destructure historyContext\r\n  const historyContext = useContext(HistoryContext);\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { currentLevel, currentTheme, addNewGame } = historyContext;\r\n\r\n  // delcare component state\r\n  const [active, setActive] = useState(true);\r\n  const [curNumOfMoves, setCurNumOfMoves] = useState(0);\r\n  const [newGame, setNewGame] = useState({\r\n    gameLevel: '',\r\n    numOfMoves: 0,\r\n    date: Date.now(),\r\n  });\r\n\r\n  // authenticate user if game page is loaded\r\n  useEffect(() => {\r\n    authContext.loadUser();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // change active state boolean\r\n  const updateActive = () => {\r\n    let cur = active;\r\n    setActive(!cur);\r\n  };\r\n\r\n  // store current number of moves\r\n  const updateCurNumOfMoves = (count) => {\r\n    setCurNumOfMoves(count);\r\n  };\r\n\r\n  // store newGame object\r\n  const updateNewGame = (newGame) => {\r\n    setNewGame(newGame);\r\n  };\r\n\r\n  // add new game object to context and database\r\n  const onClick = (e) => {\r\n    addNewGame(newGame);\r\n  };\r\n\r\n  return (\r\n    // materializeCSS card\r\n    // prevent view if page loading\r\n    !authContext.loading && (\r\n      <div className='game-board'>\r\n        {/* show game cards if active state true */}\r\n        {active ? (\r\n          <Cards\r\n            updateActive={updateActive}\r\n            updateNumOfMoves={updateCurNumOfMoves}\r\n            currentLevel={currentLevel}\r\n            currentTheme={currentTheme}\r\n            updateNewGame={updateNewGame}\r\n          />\r\n        ) : (\r\n          // show congratulations card if game not active\r\n          <div className='row container'>\r\n            <div className='col s12'>\r\n              <div className='card blue-grey darken-1 small'>\r\n                <div className='card-content white-text'>\r\n                  <span className='center card-title'>Congratulations!</span>\r\n                  <br></br>\r\n                  <span className='center card-title'>\r\n                    You won in {curNumOfMoves} moves!\r\n                  </span>\r\n                  <br></br>\r\n                  <div className='col s12 card-action'>\r\n                    <div className='col s12 center'>\r\n                      <Link\r\n                        to='/'\r\n                        className='waves-effect waves-red btn-flat'\r\n                        onClick={onClick}\r\n                      >\r\n                        End Game\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  // declare authcontext\r\n  const authContext = useContext(AuthContext);\r\n\r\n  // destructure variables\r\n  const { isAuthenticated, loading } = authContext;\r\n\r\n  // if user authenticated, allow access to private routes\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !isAuthenticated && !loading ? (\r\n          <Redirect to='/signin' />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","export const UPDATE_CURRENT_LEVEL = 'UPDATE_CURRENT_LEVEL';\r\nexport const UPDATE_CURRENT_THEME = 'UPDATE_CURRENT_THEME';\r\nexport const ADD_NEW_GAME = 'ADD_NEW_GAME';\r\nexport const GAME_ERROR = 'GAME_ERROR';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const GET_GAMES = 'GET_GAMES';\r\n","import {\r\n  UPDATE_CURRENT_LEVEL,\r\n  UPDATE_CURRENT_THEME,\r\n  ADD_NEW_GAME,\r\n  GAME_ERROR,\r\n  GET_GAMES,\r\n} from '../types';\r\n\r\n// historyReducer returns object state based on the type passed in using a switch\r\nconst historyReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_GAMES:\r\n      return {\r\n        ...state,\r\n        games: action.payload,\r\n      };\r\n    case UPDATE_CURRENT_LEVEL:\r\n      return {\r\n        ...state,\r\n        currentLevel: action.payload,\r\n      };\r\n    case UPDATE_CURRENT_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.payload,\r\n      };\r\n    case ADD_NEW_GAME:\r\n      return {\r\n        ...state,\r\n        games: [...state.games, action.payload],\r\n      };\r\n    case GAME_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default historyReducer;\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport HistoryContext from './historyContext';\r\nimport historyReducer from './historyReducer';\r\nimport {\r\n  ADD_NEW_GAME,\r\n  UPDATE_CURRENT_LEVEL,\r\n  UPDATE_CURRENT_THEME,\r\n  GAME_ERROR,\r\n  GET_GAMES,\r\n} from '../types';\r\n\r\nconst HistoryState = (props) => {\r\n  // declare initial state\r\n  const initialState = {\r\n    games: [],\r\n    currentLevel: 'beginner',\r\n    currentTheme: 'robots',\r\n    error: null,\r\n  };\r\n\r\n  // declare state and dispatch with usereducer hook\r\n  const [state, dispatch] = useReducer(historyReducer, initialState);\r\n\r\n  // Get games for user\r\n  const getGames = async () => {\r\n    // declare response from backend, dispatch to reducer\r\n    try {\r\n      const res = await axios.get('/api/history');\r\n\r\n      dispatch({\r\n        type: GET_GAMES,\r\n        payload: res.data,\r\n      });\r\n      // dispatch errr msg if found\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GAME_ERROR,\r\n        payload: error.response.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Add game to history\r\n  const addNewGame = async (newGame) => {\r\n    const config = {\r\n      header: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post('/api/history', newGame, config);\r\n\r\n      dispatch({\r\n        type: ADD_NEW_GAME,\r\n        payload: res.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GAME_ERROR,\r\n        payload: error.response.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Delete all games from history\r\n\r\n  // Update currentLevel\r\n  const updateCurrentLevel = (level) => {\r\n    dispatch({ type: UPDATE_CURRENT_LEVEL, payload: level });\r\n  };\r\n\r\n  // Update currentTheme\r\n  const updateCurrentTheme = (theme) => {\r\n    dispatch({ type: UPDATE_CURRENT_THEME, payload: theme });\r\n  };\r\n\r\n  return (\r\n    // return all variables and functions to provider\r\n    <HistoryContext.Provider\r\n      value={{\r\n        games: state.games,\r\n        currentLevel: state.currentLevel,\r\n        currentTheme: state.currentTheme,\r\n        error: state.error,\r\n        updateCurrentLevel,\r\n        updateCurrentTheme,\r\n        addNewGame,\r\n        getGames,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </HistoryContext.Provider>\r\n  );\r\n};\r\n\r\nexport default HistoryState;\r\n","import {\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n  REGISTER_SUCCESS,\r\n} from '../types';\r\n\r\n// authReducer returns object state based on the type passed in using a switch\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import axios from 'axios';\r\n\r\n// set token for private routes\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport AuthContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\nimport {\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n  REGISTER_SUCCESS,\r\n} from '../types';\r\n\r\nconst AuthState = (props) => {\r\n  // declare inicial state\r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n    error: null,\r\n  };\r\n\r\n  // declare state/dispatch with useReducer hook\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Load User\r\n  const loadUser = async () => {\r\n    // check localstorage has a token, setAUthToken if so\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n\r\n    // declare response from backend, dispatch data to USER_LOADED\r\n    try {\r\n      const res = await axios.get('/api/auth');\r\n\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n      // dispatch error msg to AUTH_ERROR\r\n    } catch (error) {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: error.response.data.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Register User\r\n  const register = async (formData) => {\r\n    // declare config variable with header\r\n    const config = {\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    // declare response from backend, post user data\r\n    try {\r\n      const res = await axios.post('/api/users', formData, config);\r\n\r\n      // dispatch data to reducer\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      // load user\r\n      loadUser();\r\n      // dispatch error if found\r\n    } catch (error) {\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n        payload: error.response.data.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Login User\r\n  const login = async (formData) => {\r\n    // declare config variable with header\r\n    const config = {\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    // declare response from post, dispatch to reducer\r\n    try {\r\n      const res = await axios.post('/api/auth', formData, config);\r\n\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      loadUser();\r\n      // dispatch error if found\r\n    } catch (error) {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: error.response.data.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n\r\n  // Clear Errors\r\n  const clearErrors = () => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n  };\r\n\r\n  return (\r\n    // return all variables and functions to provider\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        error: state.error,\r\n        register,\r\n        clearErrors,\r\n        loadUser,\r\n        login,\r\n        logout,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layouts/Navbar';\nimport Home from './components/pages/Home';\nimport Signin from './components/pages/Signin';\nimport Register from './components/pages/Register';\nimport Game from './components/pages/Game';\nimport PrivateRoute from './components/routing/privateRoute';\n\nimport HistoryState from './context/history/HistoryState';\nimport AuthState from './context/auth/AuthState';\nimport setAuthToken from './utils/setAuthToken';\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  return (\n    // auth and history contexts\n    <AuthState>\n      <HistoryState>\n        {/* router for navigation */}\n        <Router>\n          <div className='App'>\n            {/* navbar component */}\n            <Navbar />\n            <div className='Routes'>\n              {/* private/public routes for app */}\n              <Switch>\n                <PrivateRoute exact path='/' component={Home} />\n                <Route exact path='/signin' component={Signin} />\n                <Route exact path='/register' component={Register} />\n                <PrivateRoute exact path='/game' component={Game} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </HistoryState>\n    </AuthState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}